@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <!--标题-->
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        生产加工进度管理
    </div>
    <el-form v-on:submit.native.prevent :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px" class="demo-ruleForm">
        <!--搜索表格-->
        <template>
            <span style="padding:3px;">流水号</span>
            <sam-input :value.sync="ruleForm.taskId" style="width:100px;" placeholder="流水号"></sam-input>
            <span style="padding:3px;">关键字</span>
            <sam-input :value.sync="ruleForm.key" style="width:240px;" placeholder="项目名、BOM、设计员、记录人"></sam-input>
            <span style="padding:3px;">项目类型</span>
            <el-cascader v-model="ruleForm.types"
                         :options="PTypes"
                         :props="{ expandTrigger: 'hover' }">
            </el-cascader>
            <br />
            <span style="padding:3px;margin-top:10px;">单位</span>
            <el-select v-model="companyId" placeholder="请选择">
                <el-option v-for="c in companys" :key="c.value" :label="c.label" :value="c.value">
                </el-option>
            </el-select>
            <el-button type="primary" v-on:click="search(false)">搜索</el-button>
            <el-button type="primary" v-on:click="search(true)">打印表单</el-button>
        </template>
        <!--表格實體-->
        <h1 style="font-size:20px;">当前加工进度表<span style="color:red;">(背景色:绿-{{greenStates.join(',')}} ; 红-{{redStates.join(',')}} ; 黄-{{yellowStates.join(',')}})</span></h1>
        <el-button type="primary" :disabled="disablePage" v-on:click="save">更新进度表</el-button>
        <el-table :data="tableData" :row-class-name="tableRowClassName"
                  style="width: 100%">
            @*<el-table-column prop="CodeNo" type="index"></el-table-column>*@
            <!-- ruleIndex 用户权限(返回 0 生产加工进度发起人 1 生产加工进度分配人 2 没权限(设计人员) 3(-1).实际记录人-->
            <!-- 0 生产加工进度发起人-->
            <template>
                <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't1'" :fixed="con.fixed" :prop="con.param" :width="con.width" :label="con.label">
                    <template slot-scope="scope">
                        <el-input v-if="scope.row.Power.indexOf(0)>=0 && disabledEdit.indexOf(con.param) < 0" v-model="scope.row[con.param]" type="textarea" :maxlength="30" :show-word-limit="true"
                                  :disabled="disabledStates.indexOf(scope.row['SpeedOfProgress']) >= 0">
                        </el-input>
                        <p v-else>{{scope.row[con.param]}}</p>
                    </template>
                </el-table-column>
                <el-table-column prop="Designer" width="180" label="设计人">
                    <template slot-scope="scope">
                        <el-input v-if="scope.row.Power.indexOf(0)>=0 && disabledStates.indexOf(scope.row['SpeedOfProgress']) < 0" v-model="scope.row['Designer']" :disabled="true" style="width:60px;"></el-input>
                        <el-button v-if="scope.row.Power.indexOf(0)>=0 && disabledStates.indexOf(scope.row['SpeedOfProgress']) < 0"
                                   class="button-new-tag" size="small" v-on:click="changeDesigner(scope.$index, scope.row)" style="margin-left:0;">选择
                        </el-button>
                        <p v-else>{{scope.row['Designer']}}</p>
                    </template>
                </el-table-column>
                <el-table-column label="资料接收时间">
                    <el-table-column v-for="con in tableConfig" v-if="con.upLabel == '资料接收时间'" :prop="con.param" width="120" :label="con.label">
                        <template slot-scope="scope">
                            @*<el-input v-if="scope.row.Power.indexOf(0)>=0" v-model="scope.row[con.param]" 
                                      :disabled="disabledStates.indexOf(scope.row['SpeedOfProgress']) >= 0"></el-input>*@
                            <p @*v-else*@>{{scope.row[con.param]}}</p>
                        </template>
                    </el-table-column>
                </el-table-column>
                <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't21'" :prop="con.param" width="150" :label="con.label">
                    <template slot-scope="scope">
                        @*<el-input v-if="scope.row.Power.indexOf(0)>=0" v-model="scope.row[con.param]"
                                  :disabled="disabledStates.indexOf(scope.row['SpeedOfProgress']) >= 0"></el-input>*@
                        <p @*v-else*@>{{scope.row[con.param]}}</p>
                    </template>
                </el-table-column>
            </template>

            <!-- 3.实际记录人-->
            <template>
                <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't22'" :prop="con.param" width="160" :label="con.label">
                    <template slot-scope="scope">
                        <el-date-picker v-if="scope.row.Power.indexOf(3)>=0" v-model="scope.row[con.param]" value-format="yyyy-MM-dd" clear-icon="el-icon-date" prefix-icon="a"
                                        type="date" :disabled="disabledStates.indexOf(scope.row['SpeedOfProgress']) >= 0" :editable="false">
                        </el-date-picker>
                        <p v-else>{{scope.row[con.param]}}</p>
                    </template>
                </el-table-column>
                <el-table-column label="零件加工">
                    <el-table-column v-for="con in tableConfig" v-if="con.upLabel == '零件加工'" :prop="con.param" width="150" :label="con.label">
                        <template slot-scope="scope">
                            <template>
                                <el-input v-if="scope.row.Power.indexOf(3)>=0 && con.label != '进度'" v-model="scope.row[con.param]" :disabled="disabledStates.indexOf(scope.row['SpeedOfProgress']) >= 0"></el-input>
                                <el-select v-on:change="changeStates(scope.row[con.param],scope.row)" v-if="scope.row.Power.indexOf(3)>=0 && con.label == '进度'"
                                           v-model="scope.row[con.param]" placeholder="请选择" :disabled="disabledStates.indexOf(scope.row['SpeedOfProgress']) >= 0">
                                    <el-option v-for="s in states" :key="s" :label="s" :value="s">
                                    </el-option>
                                </el-select>
                                <p v-if="scope.row.Power.indexOf(3) < 0">{{scope.row[con.param]}}</p>
                            </template>
                            
                        </template>
                    </el-table-column>
                </el-table-column>
                <el-table-column prop="ActualCompletionTime" width="150" label="实际加工完成时间">
                    <template slot-scope="scope">
                        <el-date-picker v-if="scope.row.Power.indexOf(3)>=0" v-model="scope.row['ActualCompletionTime']" value-format="yyyy-MM-dd" clear-icon="el-icon-date" prefix-icon="a"
                                        type="date" :disabled="disabledStates.indexOf(scope.row['SpeedOfProgress']) >= 0" :editable="false">
                        </el-date-picker>
                        <p v-else>{{scope.row['ActualCompletionTime']}}</p>
                    </template>
                </el-table-column>
                <el-table-column label="组装">
                    <el-table-column v-for="con in tableConfig" v-if="con.upLabel == '组装'" :prop="con.param" width="150" :label="con.label">
                        <template slot-scope="scope">
                            <el-input v-if="scope.row.Power.indexOf(3)>=0" v-model="scope.row[con.param]" :disabled="disabledStates.indexOf(scope.row['SpeedOfProgress']) >= 0"></el-input>
                            <p v-else>{{scope.row[con.param]}}</p>
                        </template>
                    </el-table-column>
                </el-table-column>
                <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't41'" :prop="con.param" width="150" :label="con.label">
                    <template slot-scope="scope">
                        <el-input v-if="scope.row.Power.indexOf(3)>=0" v-model="scope.row[con.param]" :maxlength="30" show-word-limit
                                  :disabled="disabledStates.indexOf(scope.row['SpeedOfProgress']) >= 0" type="textarea"></el-input>
                        <p v-else>{{scope.row[con.param]}}</p>
                    </template>
                </el-table-column>
            </template>

            <!-- 1 生产加工进度分配人-->
            <template>
                <el-table-column prop="HeadOfDepartments" width="150" label="部门负责人"></el-table-column>
                <el-table-column prop="NoteTaker" width="180" label="记录人">
                    <template slot-scope="scope">
                        <el-input v-if="scope.row.Power.indexOf(1)>=0 && disabledStates.indexOf(scope.row['SpeedOfProgress']) < 0" v-model="scope.row['NoteTaker']" :disabled="true" style="width:60px;"></el-input>
                        <el-button v-if="scope.row.Power.indexOf(1)>=0 && disabledStates.indexOf(scope.row['SpeedOfProgress']) < 0" class="button-new-tag" size="small" v-on:click="changePeople(scope.$index, scope.row)" style="margin-left:0;">选择</el-button>
                        <p v-else>{{scope.row['NoteTaker']}}</p>
                    </template>
                </el-table-column>
            </template>

            <!-- 2 没权限(设计人员)--> @*placeholder="确认无误填写并保存" type="textarea"*@
            <template>
                <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't43' && con.label != '备注'" :prop="con.param" width="150" :label="con.label"></el-table-column>
                <el-table-column width="150" label="设计员确认收货">
                    <template slot-scope="scope">
                        <el-button v-on:click="changeRead(scope.$index,scope.row)" :disabled="scope.row['SpeedOfProgress'] != '已完成'"
                                   v-if="scope.row.Power.indexOf(2)>=0 && scope.row['IsAlreadyRead'] != true" size="mini" type="primary">验收</el-button>
                        <p v-else-if="scope.row['IsAlreadyRead'] == '1'" style="color:green;">{{scope.row.Designer}} (已验收)</p>
                        <p v-else>{{scope.row.Designer}}(未验收)</p>
                    </template>
                </el-table-column>
                <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't43' && con.label == '备注'" :prop="con.param" width="220" :label="con.label">
                    <template slot-scope="scope">
                        <el-input v-if="scope.row.Power.indexOf(2)>=0" v-model="scope.row[con.param]" type="textarea" show-word-limit
                                  :disabled="scope.row['IsAlreadyRead'] == '1' || scope.row['SpeedOfProgress'] != '已完成'">
                        </el-input>
                        <span v-else>{{scope.row[con.param]}}</span>
                        @*<el-button v-on:click="changeRead(scope.$index,scope.row)" :disabled="scope.row['SpeedOfProgress'] != '已完成'"
                                   v-if="scope.row.Power.indexOf(2)>=0 && scope.row['IsAlreadyRead'] != '1'" size="mini" type="primary">验收</el-button>
                        <p v-if="scope.row.Power.indexOf(2) >=0 &&scope.row['IsAlreadyRead'] == '1'" style="color:green;">已验收</p>
                        <p v-if="scope.row.Power.indexOf(2) < 0">{{scope.row[con.param]}}</p>*@
                    </template>
                </el-table-column>
            </template>
        </el-table>
        <!--底部翻頁-->
        <div style="text-align:right">
            <el-pagination v-on:size-change="handleSizeChange"
                           v-on:current-change="handleCurrentChange"
                           :current-page="currentPage"
                           :page-sizes="[1, 3, 5, 10]"
                           :page-size="pageSize"
                           layout="total, sizes, prev, pager, next, jumper"
                           :total="totalRows">
            </el-pagination>
        </div>

        <template v-if="ruleIndex == 0">
            <el-upload class="upload-demo"
                       action="/drawingupload/UploadAndGetInfo"
                       :on-success="handleSuccess"
                       :before-upload="beforeExcelUpload"
                       multiple
                       :limit="1"
                       :file-list="excelList">
                <el-button size="small" type="primary">上传excel</el-button>
                <div slot="tip" class="el-upload__tip">批量上传进度表,只能上传excel文件，且不超过500kb</div>
            </el-upload>
            <el-button size="mini" type="primary" v-on:click="downloadFile(mediaId)" :disabled="disablePage">下载模板</el-button>

            <hr />
            <h1>添加一条进度 </h1>
            <span style="padding:3px;">单位</span>
            <el-select v-model="companyId" placeholder="请选择">
                <el-option v-for="c in companys" :key="c.value" :label="c.label" :value="c.value">
                </el-option>
            </el-select>
            <span style="padding:3px;">流水号</span>
            <el-input v-model="taskid" style="width:200px;"></el-input>
            <el-button type="primary" v-on:click="searchTask">搜索图纸数据</el-button>
            <el-table :data="inputTable" stripe border
                      style="width: 100%">
                <el-table-column label="操作">
                    <template slot-scope="scope">
                        <el-button size="mini" v-on:click="addGood(scope.$index, scope.row)">添加</el-button>
                    </template>
                </el-table-column>
                <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't1'" :prop="con.param" width="150" :label="con.label">
                    <template slot-scope="scope">
                        <el-input :disabled="disabledEdit.indexOf(con.param) >= 0" v-model="scope.row[con.param]"></el-input>
                    </template>
                </el-table-column>
                <el-table-column label="资料接收时间">
                    <el-table-column v-for="con in tableConfig" v-if="con.upLabel == '资料接收时间'" :prop="con.param" width="150" :label="con.label">
                        <template slot-scope="scope">
                            <el-input v-model="scope.row[con.param]"></el-input>
                        </template>
                    </el-table-column>
                </el-table-column>
                <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't21' && (con.label == '需求时间' || con.label == '需求建议')" :prop="con.param" width="150" :label="con.label">
                    <template slot-scope="scope">
                        <el-input v-model="scope.row[con.param]"></el-input>
                    </template>
                </el-table-column>
            </el-table>
        </template>


    </el-form>
</el-main>

<script>
    let a = 'DesignerId,设计员Id  HeadOfDepartmentsId,部门负责人Id   NoteTakerId,记录人Id ,TabulatorId,制表人Id  Tabulator,制表人'
    let tableConfig = {
        //1制表人编辑区~~~~~~~~~~~
        Column1: { param: 'CompanyName', label: '单位', upLabel: 't1',width: 120 },
        Column2: { param: 'ProjectType', label: '大类别', upLabel: 't1', width: 120 },
        Column3: { param: 'ProjectSmallType', label: '小类别', upLabel: 't1', width: 100},
        Column4: { param: 'Remark1', label: '备注', upLabel: 't1', width: 150},
        Column5: { param: 'ProjectId', label: '项目编码', upLabel: 't1', width: 200},
        Column6: { param: 'ProjectName', label: '项目名称', upLabel: 't1', width: 200},
        Column7: { param: 'TaskId', label: '流水号', upLabel: 't1', width: 100, fixed:'left'},
        Column8: { param: 'Bom', label: 'bom', upLabel: 't1', width: 200, fixed: 'left'},
        Column9: { param: 'AccountKeeping', label: '走账', upLabel: 't1', width: 120},
        Column10: { param: 'Designer', label: '设计员', upLabel: 't12', width: 120 },
        Col88: { param: 'DesignerId', label: '设计员Id', upLabel: 't12', width: 120 },
        //资料接收时间
        Column11: { param: 'BomTime', label: 'BOM', upLabel: '资料接收时间' },
        Column12: { param: 'TwoD', label: '2D', upLabel: '资料接收时间' },
        Column13: { param: 'ThreeD', label: '3D', upLabel: '资料接收时间' },

        Column14: { param: 'NeedTime', label: '需求时间', upLabel: 't21' },
        Column15: { param: 'NeedCount', label: '需求建议', upLabel: 't21' },

        //2记录人编辑区~~~~~~~~~~~~~
        Column16: { param: 'ScheduledDate', label: '预计开工时间', upLabel: 't22' },
        Column17: { param: 'CompletionTime', label: '预计完成时间', upLabel: 't22' },
        Column18: { param: 'BeginTime', label: '实际开始时间', upLabel: 't22' },
        //零件加工
        Column19: { param: 'HomemadeNumberZZ', label: '自制数（件）', upLabel: '零件加工' },
        Column20: { param: 'ProcessingTimeZZ', label: '加工时间（天）', upLabel: '零件加工' },
        Column21: { param: 'ProgressNumberZZ', label: '进度（件）', upLabel: '零件加工' },
        Column22: { param: 'ExternalNumberYX', label: '外协数（件）', upLabel: '零件加工' },
        Column23: { param: 'ProcessingTimeYX', label: '加工时间（天）', upLabel: '零件加工' },
        Column24: { param: 'SpeedOfProgress', label: '进度', upLabel: '零件加工' },

        Column25: { param: 'ActualCompletionTime', label: '实际加工完成时间', upLabel: 't3' },
        //组装
        Column26: { param: 'Assemble', label: '组装（%）', upLabel: '组装' },
        Column27: { param: 'Debugging', label: '调试（%）', upLabel: '组装' },
        Column28: { param: 'ProgressStatement', label: '进度说明', upLabel: '组装' },

        Column29: { param: 'Remark2', label: '备注', upLabel: 't41' },

        //3部长编辑区~~~~~~~~~~~~~
        Column30: { param: 'HeadOfDepartments', label: '部门负责人', upLabel: 't42' },
        Column31: { param: 'NoteTaker', label: '记录人', upLabel: 't42' },

        //4设计人编辑区~~~~~~~~~~~~~
        //Column32: { param: 'DesignerId', label: '设计人Id' },
        Column33: { param: 'Remark3', label: '备注', upLabel: 't43' },
        Column34: { param: 'Tabulator', label: '图纸审核员', upLabel: 't43'}
    }
    let initTable = {}
    for (let con in tableConfig) {
        initTable[tableConfig[con].param] = ''
    }
    initTable.SpeedOfProgress = '加工中' //加工進度默認值
    let tmpTableData = [] //初始表格數據，用於提交前對比
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                mediaId: '@@lAjPDeC2uWAM1p_OM-S3Z841mVDw',
                tableConfig: tableConfig,
                userid: DingData.userid,
                excelList: [],
                ptypes: [],
                time: {},
                states: ['加工中', '已完成', '暂停', '作废', '取消', '外协加工中'],
                greenStates: ['已完成'],
                redStates: ['作废', '取消'],
                yellowStates: ['加工中', '外协加工中', '暂停'],
                disabledStates: ['已完成', '作废', '取消'],
                disabledEdit: ['CompanyName'],
                data: [],
                companyId: 0,//公司Id 0 研究院 1 华数
                companys: [{ value: 0, label: '研究院' }, { value: 1, label: '华数' }],
                tableData: [],
                inputTable: [_cloneObj(initTable)],
                taskid: '',
                ruleIndex: -1,//用户权限(返回 0 生产加工进度发起人    1 生产加工进度分配人    2 没权限(设计人员)    3.实际记录人
                ruleForm: {
                    ApplyMan: DingData.nickName,
                    projectType: '',
                    projectSmallType: '',
                    taskId: '',
                    key: '',
                    types:[],
                    IsPrint: false
                }
            }
        },
        methods: {
            //搜索获取进度表
            search(print) {
                let param = {
                    applyManId: DingData.userid,
                    pageIndex: 1,
                    CompanyId: this.companyId,
                    pageSize: 10000,
                }
                if (this.ruleForm.key) param['key'] = this.ruleForm.key
                if (this.ruleForm.taskId) param['taskId'] = this.ruleForm.taskId
                if (this.ruleForm.types[0]) {
                    param['projectType'] = this.ruleForm.types[0]
                    param['projectSmallType'] = this.ruleForm.types[1]
                } 
                print ? param['IsPrint'] = true : param['IsPrint'] = false
                this.GetData('ProcessingProgress/Read' + _formatQueryStr(param), (res) => {
                    if (!res.length) {
                        this.$alert('没有数据~', '提示');
                        return
                    }
                    this.data = res
                    this.totalRows = res.length
                    this.getData()
                })
            },
            tableRowClassName({ row, rowIndex }) {
                switch (row.SpeedOfProgress) {
                    case '已完成': return 'success-row'; break;
                    case '作废': case '取消': return 'error-row'; break;
                    default: return 'warning-row';
                }
                
            },
            //生产部 部长 选择 生产负责人
            changePeople(index,row) {
                console.log(row)
                console.log(index)
                var that = this
                DingTalkPC.biz.contact.choose({
                    multiple: false, //是否多选： true多选 false单选； 默认true
                    users: [], //默认选中的用户列表，员工userid；成功回调中应包含该信息
                    corpId: DingData.CorpId, //企业id
                    onSuccess: function (data) {
                        console.log(data)
                        //不能再次分配自己权限
                        if (data[0].emplId == DingData.userid) {
                            that.$alert('不能再次分配自己权限', '提示');
                            return
                        }
                        row.NoteTaker = data[0].name
                        row.NoteTakerId = data[0].emplId
                    },
                    onFail: function (err) { }
                });
            },
            //进度发起人 选择 设计人
            changeDesigner(index, row) {
                console.log(row)
                console.log(index)
                var that = this
                DingTalkPC.biz.contact.choose({
                    multiple: false, //是否多选： true多选 false单选； 默认true
                    users: [], //默认选中的用户列表，员工userid；成功回调中应包含该信息
                    corpId: DingData.CorpId, //企业id
                    onSuccess: function (data) {
                        row.Designer = data[0].name
                        row.DesignerId = data[0].emplId
                    },
                    onFail: function (err) { }
                });
            },
            onSubmit(formName) {
 
            },
            //设计人点击确认
            changeRead(index, row) {
                this.tableData[index].IsAlreadyRead = true//'1'
                this.save()
            },
            //记录人切换状态
            changeStates(value,row) {
                console.log(value)
                console.log(row)
                if (this.disabledStates.indexOf(value) >= 0) {
                    this.$confirm('选择该状态后是否保存，保存后不能再度修改, 是否继续?', '提示', {
                        confirmButtonText: '确定',
                        cancelButtonText: '取消',
                        type: 'warning'
                    }).then(() => {
                        this.save()
                    }).catch(() => {
                        row.SpeedOfProgress = '加工中'
                    });
                    return
                }
                this.save()
            },
            //保存进度表
            save() {
                this.disablePage = true
                let changeTableData = []
                for (let i = 0; i < tmpTableData.length; i++) {
                    if (JSON.stringify(tmpTableData[i]) == JSON.stringify(this.tableData[i])) continue
                    //if (!this.tableData[i].SpeedOfProgress) {
                    //    this.$alert('修改部分状态不能为空-' + this.tableData[i].SpeedOfProgress, '提示');
                    //    this.tableData[i].IsAlreadyRead = '0'
                    //    return
                    //}
                    changeTableData.push(this.tableData[i])
                }
                let param = {
                    applyManId: DingData.userid,
                    applyMan: DingData.nickName,
                    CompanyId: 0,
                    IsExcelUpload: false,
                    processingProgresses: changeTableData
                }
                console.log(JSON.stringify(param))
                this.PostData('ProcessingProgress/Modify', param, (res) => {
                    this.$alert('修改成功', '提示');
                    this.disablePage = false
                    this.getTable()
                })
            },
            //添加加工进度
            addGood(index, good) {
                good.SpeedOfProgress = initTable.SpeedOfProgress
                let param = {
                    applyManId: DingData.userid,
                    applyMan: DingData.nickName,
                    CompanyId: this.companyId,
                    IsExcelUpload: false,
                    processingProgresses: [good]
                }
                if (!good.TaskId) {
                    this.$alert('流水号必填', '提示');
                    return
                }
                this.PostData('ProcessingProgress/Save', param, (res) => {
                    this.$alert('保存成功', '提示');
                    this.getTable()
                }, () => { },true)
            },
            
            //上传EXCEL进度表，并保存数据
            handleSuccess(response, file, fileList) {
                //this.tableData = []
                console.log(response)
                let tmpData = []
                for (let i = 2; i < response[0].Value.length; i++) {
                    tmpData.push(response[0].Value[i])
                }
                for (let t of tmpData) {
                    for (let c in t) {
                        if (tableConfig[c]) {
                            t[tableConfig[c].param] = t[c]
                            delete t[c]
                        }
                    }
                }
                let param = {
                    applyManId: DingData.userid,
                    applyMan: DingData.nickName,
                    CompanyId: this.companyId,
                    IsExcelUpload: true,
                    processingProgresses: tmpData
                }
                let loading = this.$loading({
                    lock: true,
                    text: 'Loading',
                    spinner: 'el-icon-loading',
                    background: 'rgba(0, 0, 0, 0.7)'
                });
                this.PostData('ProcessingProgress/Save', param, (res) => {
                    loading.close()
                    this.$alert('保存成功', '提示');
                    this.getTable()
                }, (res) => {
                    loading.close()
                    this.$alert('文件格式不符合对应模板要求，请根据对应模板导入数据！', '提示');
                    return false
                })
            },
            searchTask() {
                this.GetData('ProcessingProgress/DefaultRead' + _formatQueryStr({
                    taskId: this.taskid,
                    CompanyId: this.companyId
                }), (res) => {
                    for (let r in res) {
                        if (res[r] == null) {
                            res[r] = ''
                        }
                    }
                    for (let c in tableConfig) {
                        let p = tableConfig[c].param
                        this.inputTable[0][p] = res[p]
                    }
                    //设置默认公司
                    for (let c of this.companys) {
                        if (c.value == this.companyId) {
                            this.inputTable[0].CompanyId = c.value
                            this.inputTable[0].CompanyName = c.label
                        }
                    }
                    //this.inputTable[0] = res  Designer
                    this.setRuleData()
                })
            },
            //获取bom数据
            getTable() {
                this.GetData('ProcessingProgress/Read' + _formatQueryStr({
                    applyManId: DingData.userid,
                    pageIndex: 1,
                    CompanyId: this.companyId,
                    pageSize: 10000
                }) , (res) => {
                    this.data = res
                    this.totalRows = res.length
                    this.getData()
                })
            },
            getData() {
                var start = this.pageSize * (this.currentPage - 1)
                this.tableData = this.data.slice(start, start + this.pageSize)
                tmpTableData = _cloneArr(this.tableData)
            },
            //设置角色数据
            setRuleData() {
                var that = this
                var url = '/Role/GetRoleInfo?RoleName=生产加工进度分配人'
                $.ajax({
                    url: url,
                    success: function (data) {
                        console.log(url)
                        console.log(data)
                        //for (let d of data) {
                            //if (DingData.userid == d.emplId) {
                                //that.ruleIndex = 1
                                that.inputTable[0].HeadOfDepartmentsId = data[0].emplId
                                that.inputTable[0].HeadOfDepartments = data[0].name
                                that.inputTable[0].NoteTakerId = data[0].emplId
                                that.inputTable[0].NoteTaker = data[0].name
                                that.inputTable[0]['Tabulator'] = DingData.nickName
                                that.inputTable[0]['TabulatorId'] = DingData.userid
                            //} 
                        //}
                    }
                })
                var url2 = '/Role/GetRoleInfo?RoleName=生产加工进度发起人'
                $.ajax({
                    url: url2,
                    success: function (data) {
                        console.log(url2)
                        console.log(data)//ruleIndex
                        for (let d of data) {
                            if (DingData.userid == d.emplId) that.ruleIndex = 0
                        }
                    }
                })
            }
        },
        created: function () {
            this.getTable()
            this.setRuleData()
            loadHtml("mainPage", "partPage")
        }
    })

</script>
