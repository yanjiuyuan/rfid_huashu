@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <!--标题-->
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        {{FlowName}}-{{nodeInfo.NodeName}}
    </div>
    <div>
        <span style="color:red">*</span>@*<span style="padding:3px;">关键字</span>*@
        <sam-input :value.sync="searchForm.name" style="width:200px;" placeholder="请输入搜索关键字"></sam-input>
        <el-button type="primary" v-on:click="searchCode">搜索</el-button>
    </div>
    <!--物料列表表格實體-->
    <el-table :data="tableData" stripe border>
        <el-table-column prop="FNumber" label="物料编码"></el-table-column>
        <el-table-column prop="FName" label="物料名称"></el-table-column>
        <el-table-column prop="FModel" label="规格型号"></el-table-column>
        <el-table-column prop="FNote" label="预计单价"></el-table-column>
        <el-table-column label="操作">
            <template slot-scope="scope">
                <p v-if="noList.indexOf(scope.row.FNumber) >= 0">已选择</p>
                <el-button v-else size="mini" v-on:click="addGood(scope.$index, scope.row)">选择</el-button>
            </template>
        </el-table-column>
    </el-table>
    <!--底部翻頁-->
    <div style="text-align:right">
        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[1, 3, 5, 10]"
                       :page-size="pageSize"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="totalRows">
        </el-pagination>
    </div>
    <hr />
    <h3>已选物料</h3>
    <!--采购列表表格實體-->
    <el-table :data="purchaseList" stripe border>
        <el-table-column prop="CodeNo" type="index"></el-table-column>
        <el-table-column prop="CodeNo" label="物料编码"></el-table-column>
        <el-table-column prop="Name" label="物料名称"></el-table-column>
        <el-table-column prop="Standard" label="规格型号"></el-table-column>
        <el-table-column prop="Unit" label="单位">
            <template slot-scope="scope">
                <sam-input :value.sync="scope.row.Unit" :required="true"></sam-input>
            </template>
        </el-table-column>
        <el-table-column prop="Price" label="单价" width="100">
            <template slot-scope="scope">
                <sam-input :value.sync="scope.row.Price" type="number" min="0"></sam-input>
            </template>
        </el-table-column>
        <el-table-column prop="Count" label="数量" width="100">
            <template slot-scope="scope">
                <sam-input :value.sync="scope.row.Count" type="number" min="0" :required="true"></sam-input>
            </template>
        </el-table-column>
        <el-table-column prop="Purpose" label="用途">
            <template slot-scope="scope">
                <sam-input :value.sync="scope.row.Purpose" :required="true"></sam-input>
            </template>
        </el-table-column>
        <el-table-column prop="UrgentDate" label="需用日期" width="160">
            <template slot-scope="scope">
                <el-date-picker v-model="scope.row.UrgentDate" style="width:100%;" :class="{ redborder:scope.row.UrgentDate ==''}" class="repadding" :editable="false"
                                type="date" prefix-icon="el-icon-minus" clear-icon="el-icon-minus" value-format="yyyy-MM-dd">
                </el-date-picker>
            </template>
        </el-table-column>
        <el-table-column prop="Mark" label="备注">
            <template slot-scope="scope">
                <sam-input :value.sync="scope.row.Mark"></sam-input>
            </template>
        </el-table-column>
        <el-table-column label="操作" width="80">
            <template slot-scope="scope">
                @*<el-button size="mini" v-on:click="showEditGood(scope.$index, scope.row)">编辑</el-button>*@
                <el-button size="mini" type="danger" v-on:click="deleteGood(scope.$index, scope.row)">删除</el-button>
            </template>
        </el-table-column>
    </el-table>

    <el-form v-on:submit.native.prevent :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm"
             id="uploadForm" enctype="multipart/form-data">
        @RenderPage("~/Views/Shared/startForm.cshtml")
        <el-form-item label="预计总价">
            <el-input v-model="totalPrice" :disabled="true"></el-input>
        </el-form-item>
        <el-form-item label="项目名称" prop="ProjectId">
            <el-select v-model="ruleForm.ProjectId" placeholder="请选择" style="width:400px;" v-on:change="selectProject" filterable>
                <el-option v-for="item in projectList"
                           :key="item.ProjectId"
                           :label="item.ProjectId + '-' + item.ProjectName"
                           :value="item.ProjectId">
                    <span style="float: left"> {{item.ProjectId}}-{{ item.ProjectName }} </span>
                    <span style="float: right; color: #8492a6; font-size: 13px"></span>
                </el-option>
            </el-select>
        </el-form-item>
        @RenderPage("~/Views/Shared/startButton.cshtml")
    </el-form>
</el-main>

<script>
    NodeId = '0'
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                good: {
                    Price: '',
                    Unit: '',
                    Count: ''
                },
                addPeopleNodes: [1],
                searchForm: {name:''}
            }
        },
        methods: {
            onSubmit(formName) {
                var that = this
                if (!this.purchaseList.length) {
                    this.$message({ type: 'error', message: `采购列表不能为空` });
                    return
                }
                for (let p of this.purchaseList) {
                    if (!p.UrgentDate || !p.Unit || !p.Count || !p.Purpose) {
                        this.elementAlert('提示信息', '表单未填写完整')
                        return
                    }
                }
                let callBack = function (taskId) {
                    var paramArr = []
                    for (let p of that.purchaseList) {
                        p.TaskId = taskId
                        paramArr.push(p)
                    }
                    that.PostData('/PurchaseNew/SavePurchaseTable', paramArr, (res) => {
                        that.$alert('恭喜提交审批成功', '提示信息', {
                            confirmButtonText: '确定',
                            callback: action => {
                                goHome()
                            }
                        })
                    })
                }
                this.approvalSubmit(callBack)
            },
            //添加申请物料
            addGood(index, good) {
                for (let p of this.purchaseList) {
                    if (p.CodeNo == good.FNumber) return
                }
                console.log(good.FNote)
                this.purchaseList.push({
                    CodeNo: good.FNumber,
                    Name: good.FName,
                    Standard: good.FModel,
                    Unit: '',
                    Price: good.FNote == '0' ? '' : good.FNote,
                    Count: '',
                    Purpose: '',
                    UrgentDate: '',
                    Mark: ''
                })
                this.noList.push(good.FNumber)
            },
        },
        computed: {
            totalPrice: function () {
                var totalPrice = 0
                for (let p of this.purchaseList) {
                    totalPrice = parseFloat((totalPrice + p.Price * p.Count).toFixed(2))
                }
                return totalPrice
            }
        },
        created: function () {
            this.initStart()
        }
    })
    document.onkeydown = function (e) { // 回车提交表单
        // 兼容FF和IE和Opera
        var theEvent = window.event || e;
        var code = theEvent.keyCode || theEvent.which || theEvent.charCode;
        if (code == 13) {
            demo.searchCode()
        }
    }
</script>



