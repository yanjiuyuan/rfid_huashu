@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <!--标题-->
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        {{FlowName}}-{{nodeInfo.NodeName}}
    </div>
    <el-form v-on:submit.native.prevent :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px" class="demo-ruleForm">
        @RenderPage("~/Views/Shared/startForm.cshtml")

        <!--表格實體  -->
        <el-Table :data="purchaseList" stripe border>
            <el-Table-column prop="CodeNo" type="index"></el-Table-column>
            <el-Table-column label="操作">
                <template slot-scope="scope">
                    <el-button size="mini" type="danger" v-on:click="deleteGood(scope.$index, scope.row)">删除</el-button>
                </template>
            </el-Table-column>
            <el-Table-column v-for="(value,key) in meterielConfig" :prop="key" :label="value" :key="key">
            </el-Table-column>
        </el-Table>
        <hr />
        <!--物料明细-->
        <el-form :model="ruleForm" :inline="true" label-width="120px" class="demo-ruleForm">
            <template v-for="(good,index) in goods">
                <el-form-item v-for="(g,gk) in good" :key="gk" v-if="needInput.indexOf(gk) >= 0 && meterielConfig[gk]" width="50"
                              :label="meterielConfig[gk]">
                    <sam-input :value.sync="good[gk]" :required="true"></sam-input>
                </el-form-item>
                <el-form-item v-for="(g,gk) in good" :key="gk" v-if="needInput.indexOf(gk) <0 && meterielConfig[gk]" width="50"
                              :label="meterielConfig[gk]">
                    <sam-input :value.sync="good[gk]"></sam-input>
                </el-form-item>
            </template>
            <el-button v-on:click="addGoods" type="primary" plain> + 添加编码</el-button>
            <hr />
        </el-form>
        @RenderPage("~/Views/Shared/startButton.cshtml")
    </el-form>
</el-main>

<script>
    var meterielConfig = {
        BigCode: '物料大类编码',
        SmallCode: '物料小类编码',
        Name: '物料名称',
        Unit: '单位',
        Standard: '规格型号',
        SurfaceTreatment: '表面处理',
        PerformanceLevel: '性能等级',
        StandardNumber: '标准号',
        Features: '典型特征',
        purpose: '用途',
        Remark: '备注'
    }
    var meteriel = {}
    for (let m in meterielConfig) {
        meteriel[m] = ''
    }
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                purchaseList: [],
                smallMaterialCodes:[],
                meterielConfig: meterielConfig,
                meteriel: meteriel,
                needInput: ['BigCode', 'SmallCode', 'Name', 'Standard', 'Unit'],
                bigCodes: [{
                    materialCodeNumber: 1,
                    materialName:''
                }],
                goods: [_cloneObj(meteriel)],
            }
        },
        methods: {
            onSubmit(formName) {
                if (this.purchaseList.length == 0) {
                    this.addGoods()
                    if (this.purchaseList.length == 0) {
                        this.elementAlert('提示信息', '未添加编码')
                        return
                    }
                }
                for (var i = 0; i < this.purchaseList.length;i++) {
                    let d = this.purchaseList[i]
                    if (!d.BigCode || !d.BigCode || !d.Name || !d.Standard) {
                        this.elementAlert('提示信息', '第 ' + (i+1) + ' 表单未填写完整')
                        return
                    }
                }
                this.approvalSubmit(this.bindAll)
            },
            bindAll(taskId) {
                var that = this
                var paramArr = []
                for (let p of this.purchaseList) {
                    p.TaskId = taskId
                    paramArr.push(p)
                }
                //console.log(JSON.stringify(paramArr))
                $.ajax({
                    url: '/ItemCodeAdd/TableSave',
                    contentType: 'application/json; charset=utf-8',
                    type: 'POST',
                    dataType: "json",
                    data: JSON.stringify(paramArr),
                    success: function (data) {
                        var alertStr = '物料编码审批提交成功'
                        if (data.errorCode != 0) alertStr = data.errorMessage
                        that.doneSubmit(alertStr)
                    }
                })
            },

            //添加编码
            addGoods() {
                if (!this.goods[0].BigCode || !this.goods[0].BigCode || !this.goods[0].Name || !this.goods[0].Standard) {
                    this.elementAlert('提示信息', '表单未填写完整')
                    return
                }
                for (let t of this.purchaseList) {
                    if (t.Name == this.goods[0].Name && t.Standard == this.goods[0].Standard) {
                        this.$message({ type: 'error', message: `物料名称、规格型号不可重复` });
                        return
                    }
                }
                this.purchaseList.push(_cloneObj(this.goods[0]))
                
            },
            deleteGood(index, good) {
                this.purchaseList.splice(index, 1)
            },
        },
        created: function () {
            this.initStart()
        }
    })

</script>
