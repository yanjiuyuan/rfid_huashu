@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <!--标题-->
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        {{FlowName}}-{{nodeInfo.NodeName}}
    </div>
    <!--礼品管理-->
    <template v-if="isRole">
        <h1>礼品库存管理</h1>
        <h2>添加礼品</h2>
        <!--表格實體-->
        <el-table :data="excelData" stripe border>
            <el-table-column prop="CodeNo" type="index"></el-table-column>
            <el-table-column v-for="(value,key) in excelConfig" :prop="key" :label="value" :key="key">
            </el-table-column>

        </el-table>
        <!--上传表單-->
        <el-upload class="upload-demo"
                   action="/drawingupload/UploadAndGetInfo"
                   :on-success="handleSuccess"
                   :before-upload="beforeExcelUpload"
                   multiple
                   :limit="1"
                   :file-list="excelList">
            <el-button size="small" type="primary">上传excel</el-button>
            <div slot="tip" class="el-upload__tip">只能上传excel文件，且不超过500kb</div>
        </el-upload>
        <el-button type="primary" v-on:click="addGifts">添加礼品</el-button>
        <h2>所有礼品</h2>
        <!--表格實體-->
        <el-table :data="allData" stripe border>
            <el-table-column prop="CodeNo" type="index"></el-table-column>
            <el-table-column v-for="(value,key) in excelConfig" :prop="key" :label="value" :key="key">
            </el-table-column>
            <el-table-column label="操作" width="150">
                <template slot-scope="scope">
                    <el-button size="mini" v-on:click="showEdit(scope.$index, scope.row)">编辑</el-button>
                    <el-button size="mini" type="danger" v-on:click="deleteGift(scope.$index, scope.row)">删除</el-button>
                </template>
            </el-table-column>
        </el-table>
        <!--编辑项目表单-->
        <el-dialog title="编辑礼品库存" :visible.sync="dialogFormVisible">
            <el-form v-on:submit.native.prevent :model="editForm" ref="ruleForm" label-width="100px" class="demo-ruleForm"
                     enctype="multipart/form-data">
                <template>
                    <el-form-item v-for="(value,key) in excelConfig" :prop="key" :label="value">
                        <el-input v-model="editForm[key]"></el-input>
                    </el-form-item>
                    <hr />
                    <el-form-item>
                        <el-button type="primary" v-on:click="editGift('ruleForm')">保存</el-button>
                    </el-form-item>
                </template>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button v-on:click="dialogFormVisible = false">取 消</el-button>
            </div>
        </el-dialog>
    </template>

    <!--礼品添加-->
    <div>
        <span style="color:red">*</span><span style="padding:3px;">关键字</span>
        <sam-input :value.sync="searchForm.key" style="width:200px;" placeholder="请输入搜索关键字"></sam-input>
        <el-button type="primary" v-on:click="searchGifts">搜索</el-button>
    </div>
    <!--搜索结果礼品列表表格實體-->
    <el-table :data="tableData" stripe border>
        <el-table-column prop="CodeNo" type="index"></el-table-column>
        <el-table-column v-for="(value,key) in excelConfig" :prop="key" :label="value" :key="key">
        </el-table-column>
        <el-table-column label="操作">
            <template slot-scope="scope">
                <el-button size="mini" v-on:click="addGood(scope.$index, scope.row)">选择</el-button>
            </template>
        </el-table-column>
    </el-table>
    <hr />
    <h3>已选礼品</h3>
    <!--采购列表表格實體-->
    <el-table :data="purchaseList" stripe border>
        <el-table-column prop="GiftName" label="礼品名称"></el-table-column>
        <el-table-column prop="GiftCount" label="礼品数量">
            <template slot-scope="scope">
                <sam-input :value.sync="scope.row.GiftCount" type="number" :required="true" :max="scope.row.max" min="0"></sam-input>
            </template>
        </el-table-column>
        <el-table-column label="操作" width="80">
            <template slot-scope="scope">
                <el-button size="mini" type="danger" v-on:click="deleteGood(scope.$index, scope.row)">删除</el-button>
            </template>
        </el-table-column>
    </el-table>

    <el-form v-on:submit.native.prevent :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px" class="demo-ruleForm"
             id="uploadForm" enctype="multipart/form-data">
        @RenderPage("~/Views/Shared/startForm.cshtml")
        @RenderPage("~/Views/Shared/startButton.cshtml")
    </el-form>
</el-main>

<script>
    var excelConfig = {
        Type: '大类',
        ProjectName: '小类',
        GiftName: '名称',
        Stock: '库存',
        Unit: '单位',
        Price: '单价'
    }
    var configDictionary = {}
    for (let c in excelConfig) {
        configDictionary[excelConfig[c]] = c
    }

    var giftList = ['泸州老窖', '张裕干红葡萄酒', '卡斯特干红葡萄酒', '狮王干红葡萄酒', '石花霸王醉', '水上坊', '毛铺苦荞酒', '香格里拉干红葡萄酒', '贵州茅台酒']
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                giftList: giftList,
                giftName: [0],
                count: 0,
                good: {
                    ExpectPrice: '',
                    Unit: '',
                    Count: ''
                },
                searchForm: {
                    key: '',
                },
                isRole: false,//是否为特定角色
                excelConfig: excelConfig,
                excelList: [],
                excelData: [],
                allData: [],
                editForm: {},
            }
        },
        methods: {
            onSubmit(formName) {
                if (!this.purchaseList.length) {
                    this.elementAlert('提交失败', '没有选择礼品')
                    return
                }
                for (let p of this.purchaseList) {
                    for (let d of this.allData) {
                        if (p.GiftNo == d.Id && parseInt(p.GiftCount) > parseInt(d.Stock)) {
                            this.$message({ type: 'error', message: p.GiftName + `超出库存数！` });
                            return
                        }
                    }
                }
                var that = this
                let url = '/Gift/TableSave'
                let callBack = function (taskId) {
                    console.log(taskId)
                    var param = []
                    for (let p of that.purchaseList) {
                        p.TaskId = taskId
                        param.push(p)
                    }
                    console.log(JSON.stringify(param))
                    that._postData(url, function (data) {
                        that.$alert('恭喜提交成功', '提示信息', {
                            confirmButtonText: '确定',
                            callback: action => {
                                goHome()
                            }
                        })
                    }, param)
                }
                this.approvalSubmit(callBack)
            },
            //上传文件方法
            handleSuccess(response, file, fileList) {
                //this.tableData = []
                console.log(response)
                for (let d of response[0].Value) {
                    let tmpData = {}
                    for (let s in d) {
                        tmpData[configDictionary[s]] = d[s]
                    }
                    this.excelData.push(tmpData)
                }
            },
            //添加Bom的礼品列表
            addGifts() {
                this.PostData('Gift/StockSave', this.excelData, (res) => {
                    this.allData = this.allData.concat(this.excelData)
                    this.elementAlert('提示信息', '添加成功')
                })
            },
            //获取所有库存
            getAllGifts() {
                this.GetData('Gift/GetStock', (res) => {
                    this.allData = res
                })
            },
            //查询库存
            searchGifts() {
                let url = 'Gift/GetStock?key=' + this.searchForm.key
                if (!this.searchForm.key) url = 'Gift/GetStock'
                this.GetData(url, (res) => {
                    if (res.length == 0) this.$message({ type: 'warning', message: `获取数据数为0` })
                    this.tableData = res
                })
            },
            //删除库存
            deleteGift(index,row) {
                this.PostData('Gift/StockMove', row, (res) => {
                    this.getAllGifts()
                })
            },
            //编辑库存
            editGift() {
                this.PostData('Gift/StockModify', [this.editForm], (res) => {
                    this.getAllGifts()
                    this.dialogFormVisible = false
                })
            },
            //打开编辑表单
            showEdit(index, row) {
                this.editForm = row
                this.dialogFormVisible = true
            },
            //添加礼品
            addGood(index, row) {
                if (row.Stock <= 0) {
                    this.$message({ type: 'error', message: `当前礼品暂无库存` });
                    return
                }
                for (let p of this.purchaseList) {
                    if (p.GiftNo == row.Id) {
                        this.$message({ type: 'error', message: `重复选择` });
                        return
                    }
                }
                this.purchaseList.push({
                    GiftNo: row.Id,
                    GiftName: row.GiftName,
                    GiftCount: 1,
                    max: parseInt(row.Stock) 
                })
            },
            
        },
        created: function () {
            this.judgeRole('礼品管理员')
            this.getAllGifts()
            this.initStart()
        }
    })

</script>



