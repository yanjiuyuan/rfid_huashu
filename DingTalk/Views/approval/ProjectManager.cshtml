@{
    Layout = null;
}

<!--右侧实体内容-->
<div id="partPage">
    <!--标题-->
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        项目列表
    </div>
    <!--检索项目表单-->
    <el-form v-on:submit.native.prevent :model="formInline" class="demo-form-inline"
             size="medium">
        <el-form-item label="关键字">
            <sam-input :value.sync="formInline.key" style="width:200px;" placeholder="项目名、项目编号、部门、负责人"></sam-input>
        </el-form-item>
        <!--高级检索-时间-->
        <template v-if="superSearch">
            <el-form-item label="开始日期">
                <el-date-picker v-model="formInline.time"
                                type="daterange" :editable="false"
                                :picker-options="pickerOptions"
                                value-format="yyyy-MM-dd"
                                range-separator="至"
                                start-placeholder="开始日期"
                                end-placeholder="结束日期">
                </el-date-picker>
            </el-form-item>

            <!--高级检索-表单选项-->
            <el-form-item>
                <el-checkbox-group v-model="formInline.projectState" :min="1">
                    <el-checkbox v-for="t in status" :label="t" :key="t">{{t}}</el-checkbox>
                </el-checkbox-group>
            </el-form-item>
            <el-form-item label="项目类型">
                <div class="block">
                    <el-cascader v-model="ptypes"
                                 :options="PTypes"
                                 :props="{ expandTrigger: 'hover' }"
                                 v-on:change="handleChange"></el-cascader>
                </div>
            </el-form-item>
        </template>

        <el-form-item>
            <el-button type="primary" v-on:click="getProject">搜索</el-button>
            <el-button type="primary" v-on:click="printout">批量导出</el-button>
            <!--上传表單-->
            @*<el-upload class="upload-demo"
                       action="/drawingupload/UploadAndGetInfo"
                       :on-success="handleSuccess"
                       :before-upload="beforeExcelUpload"
                       multiple
                       :limit="1"
                       :file-list="excelList">
                <el-button v-if="ifPower" size="small" type="primary">批量导入</el-button>
                <div slot="tip" class="el-upload__tip">只能上传excel文件，且不超过500kb</div>
            </el-upload>*@
            <span v-if="superSearch" v-on:click="superSearch = !superSearch" class="clickable-text">隐藏高级搜索</span>
            <span v-else v-on:click="superSearch = !superSearch" class="clickable-text">高级搜索</span>
        </el-form-item>
    </el-form>
    <!--表格實體-->
    <el-table :data="tableData" stripe border>
        <el-table-column type="expand">
            <template slot-scope="props">
                <el-form v-on:submit.native.prevent label-position="left" inline class="table-expand">
                    <span>创建时间:{{ props.row.CreateTime }}</span>&nbsp;&nbsp;
                    <span>开始时间:{{ props.row.StartTime }}</span>&nbsp;&nbsp;
                    <span>结束时间:{{ props.row.EndTime }}</span><br />
                    <span>小组成员:{{ props.row.TeamMembers }}</span>&nbsp;
                    <br />&nbsp;
                </el-form>
            </template>
        </el-table-column>
        <el-table-column type="index"></el-table-column>
        <el-table-column prop="type" label="项目类别"></el-table-column>
        <el-table-column prop="ProjectId" label="项目编号"></el-table-column>
        <el-table-column prop="ProjectName" label="项目名称"></el-table-column>
        @*<el-table-column prop="Customer" label="合作单位"></el-table-column>*@
        <el-table-column prop="CooperativeUnit" label="合作单位"></el-table-column>
        <el-table-column prop="DeptName" label="部门名称"></el-table-column>
        <el-table-column prop="ResponsibleMan" label="项目负责人"></el-table-column>
        <el-table-column prop="BusinessDocker" label="商务对接人"></el-table-column>
        <el-table-column prop="showProjectState" label="状态"></el-table-column>
        <el-table-column label="操作" style="width:300px;">
            <template slot-scope="scope" style="width:300px;">
                <el-button v-if="scope.row.IsEdit" size="mini" v-on:click="handleEdit(scope.$index, scope.row)">编辑</el-button>
                <span v-else>无权编辑</span>
                @*<el-button size="mini" type="danger" v-on:click="handleDelete(scope.$index, scope.row)">删除</el-button>*@
            </template>
        </el-table-column>>
    </el-table>
    <!--底部翻頁-->
    <div style="text-align:right">
        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[1, 3, 5, 10]"
                       :page-size="5"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="totalRows">
        </el-pagination>
    </div>
    <!--编辑项目表单-->
    <el-dialog title="编辑项目" :visible.sync="dialogFormVisible">
        <el-form v-on:submit.native.prevent :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm"
                 enctype="multipart/form-data">
            <template>
                <el-form-item label="项目名称" prop="ProjectName">
                    <el-input v-model="ruleForm.ProjectName" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="项目编号" prop="ProjectId">
                    <el-input v-model="ruleForm.ProjectId" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="承担部门">
                    <el-select v-model="ruleForm.DeptName" style="width:300px;">
                        <el-option v-for="s of DeptNames" :label="s" :value="s" key="s"></el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="状态" required="required">
                    <el-select v-model="ruleForm.ProjectState">
                        <el-option v-for="s of status" :label="s" :value="s" key="s"></el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="合作单位" required="required">
                    <el-input v-model="ruleForm.CooperativeUnit" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="商务对接人">
                    <el-input v-model="ruleForm.BusinessDocker"></el-input>
                </el-form-item>
                <el-form-item label="项目大类" required="required">
                    <el-input v-model="ruleForm.ProjectType" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="项目小类" required="required">
                    <el-input v-model="ruleForm.ProjectSmallType" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="项目负责人" required="required">
                    <span>{{ResponsibleMan[0].name}} &nbsp;</span>
                    <el-button class="button-new-tag" size="small" v-on:click="addMan">+ 选择</el-button>
                </el-form-item>
                <el-form-item label="项目组成员" prop="TeamMembers">
                    <sam-group :names.sync="ruleForm.TeamMembers" :ids.sync="ruleForm.TeamMembersId"></sam-group>
                </el-form-item>
                <el-form-item label="项目周期" prop="StartTime">
                    <sam-timerange :value1.sync="ruleForm.StartTime" :value2.sync="ruleForm.EndTime" :date="true"></sam-timerange>
                </el-form-item>
                @*<el-form-item label="开始时间" required="required" prop="StartTime">
                    <el-input v-model="ruleForm.StartTime"></el-input>
                </el-form-item>
                <el-form-item label="结束时间" required="required" prop="EndTime">
                    <el-input v-model="ruleForm.EndTime"></el-input>
                </el-form-item>*@
                <hr />
                <el-form-item>
                    <el-button type="primary" v-on:click="editProject('ruleForm')">保存</el-button>
                    <el-button v-on:click="dialogFormVisible = false">取 消</el-button>
                </el-form-item>
            </template>
        </el-form>
    </el-dialog>
</div>


<script>
    var Index = 0
    var id = ''
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                data: [],
                tableData: [],
                ifPower:false,
                DeptNames: DeptNames,
                superSearch: false,
                nodeInfo: {},
                formInline: {
                    key: '',
                    time: '',
                    projectState: ["在研", "已完成", "终止", "暂停"]
                },
                ruleForm: {
                    ProjectName: '',
                    ProjectId: '',
                    DeptName: '',
                    ProjectState: '',
                    ProjectType: '',
                    CompanyName: '',
                    BusinessDocker: '',
                    TeamMembersId: '',
                    TeamMembers: ''
                },
                status: ["在研", "已完成", "终止", "暂停"],
                ptypes: [null, null],
                ResponsibleMan: [{ name: '', emplId: '' }],
                dialogFormVisible: false,
                isIndeterminate: true,
                rules: {
                    TeamMembers: [
                        { required: true, message: '小组成员不能为空', trigger: 'blur' },
                    ],
                }
            }
        },
        methods: {
            //获取项目数据getProject
            getProject() {
                var that = this
                var param = {
                    key: this.formInline.key,
                    applyManId: DingData.userid,
                    projectState: this.formInline.projectState.join('_')
                }
                //if (this.formInline.key) {
                //    param.key = this.formInline.key
                //}
                if (this.formInline.time) {
                    param['startTime'] = this.formInline.time[0]
                    param['endTime'] = this.formInline.time[1]
                }
                if (this.ptypes[0]) {
                    param['projectType'] = this.ptypes[0]
                    param['projectSmallType'] = this.ptypes[1]
                }
                url = "ProjectNew/QuaryProjectInfo" + _formatQueryStr(param)
                this.GetData(url, (data) => {
                    for (let d of data) {
                        var date = new Date()
                        var dateStr = _dateToString(date)
                        d["type"] = d.ProjectType + '-' + d.ProjectSmallType
                        d["showProjectState"] = d.ProjectState
                        if (d.ProjectState == '在研' && dateStr > d.EndTime) {
                            //d.ProjectState += '-已延期'
                            d.showProjectState += '-已延期'
                        }
                    }
                    that.data = data
                    that.totalRows = data.length
                    that.getData()
                })
            },
            printout() {
                this.GetData('/ProjectNew/Print?applyManId=' + DingData.userid, (res) => {
                    DingTalkPC.device.notification.alert({ message: '获取成功~', title: '提示信息' })
                })
            },
            //上传文件方法
            handleSuccess(response, file, fileList) {
                //this.tableData = []
                console.log(response)
                let param = []
                for (let r of response[0].Value) {
                    let ifTrue = r['是否启用'] == ('True' || 'true')? true : false
                    param.push({
                        ProjectName: r['项目名称'],
                        CreateTime: r['创建时间'],
                        IsEnable: ifTrue,
                        ProjectState: r['状态'],
                        DeptName: r['部门'],
                        ApplyMan: r['创建人'],
                        ApplyManId: r['创建人Id'],
                        StartTime: r['项目开始时间'],
                        EndTime: r['项目结束时间'],
                        ProjectId: r['项目编号'],
                        FilePath: r['项目文件路径'],
                        ResponsibleMan: r['项目负责人'],
                        ResponsibleManId: r['项目负责人Id'],
                        CompanyName: r['公司名称'],
                        CooperativeUnit: r['合作单位'],
                        ProjectType: r['项目大类'],
                        ProjectSmallType: r['项目小类'],
                        TeamMembers: r['小组成员'],
                        TeamMembersId: r['小组成员Id']
                    })
                }
                if (!response[0].Key) {
                    DingTalkPC.device.notification.alert({ message: '导入失败，文件有误~', title: '提示信息' })
                    return
                }
                this.PostData('ProjectNew/AddProject', param,(res) => {
                    DingTalkPC.device.notification.alert({ message: '导入成功~', title: '提示信息' })
                })
            },
            //编辑项目并保存
            editProject(formName) {
                var that = this
                this.$refs[formName].validate((valid) => {
                    if (valid && this.ResponsibleMan[0].name) {
                        console.log(valid)
                        that.disablePage = true
                        var param = {}
                        for (let r in that.ruleForm) {
                            param[r] = that.ruleForm[r]
                        }
                        param["Id"] = id
                        param["ResponsibleMan"] = this.ResponsibleMan[0].name
                        param["ResponsibleManId"] = this.ResponsibleMan[0].emplId
                        console.log(JSON.stringify(param))
                        that.PostData("/ProjectNew/ProjectInfoModify", param, (res) => {
                            this.$message({ type: 'success', message: `保存成功` })
                            that.dialogFormVisible = false
                            that.getProject()
                        })
                    }
                    else {
                        that.$alert('表单信息不全或有误', '提示信息', {
                            confirmButtonText: '确定'
                        })
                    }
                })
            },
            //打开编辑表单
            handleChange(value) {
                console.log(value)
                this.ptypes = value
            },
            handleEdit(index, row) {
                console.log(index)
                console.log(row)
                this.ResponsibleMan[0] = { name: row.ResponsibleMan, emplId: row.ResponsibleManId }
                let groupPeople = []
                let members = row.TeamMembers.split(',')
                let membersId = row.TeamMembersId.split(',')
                for (var i = 0; i < members.length; i++) {
                    if (membersId[i])
                    groupPeople.push({ name: members[i], emplId: membersId[i] })
                }
                id = row.Id
                this.groupPeople = groupPeople
                this.dialogFormVisible = true
                for (let r in row) {
                    this.ruleForm[r] = row[r]
                }
            },
            handleDelete(index, row) {
                console.log(index, row);
            },
            getPower() {
                let that = this
                var url2 = '/Role/GetRoleInfo?RoleName=项目管理员'
                $.ajax({
                    url: url2,
                    success: function (data) {
                        console.log(data)
                        for (let d of data) {
                            if (d.emplId == DingData.userid) {
                                that.ifPower = true
                                break
                            }
                        }
                    }
                })
            }
        },
        created: function () {
            this.getProject()
            this.getPower()
            loadHtml("mainPage", "partPage")
        }
    })


</script>