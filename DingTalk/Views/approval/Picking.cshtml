@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <!--标题-->
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        {{FlowName}}-{{nodeInfo.NodeName}}
    </div>
    <!--物料搜索-->
    <div>
        <span style="color:red">*</span><span style="padding:3px;">采购流程流水号添加</span>
        <sam-input :value.sync="searchForm.taskid" style="width:200px;" placeholder="请输入流水号"></sam-input>
        <el-button type="primary" v-on:click="searchAndAdd">添加</el-button>
    </div>
    <div style="margin-top:10px;">
        <span style="color:red">*</span><span style="padding:3px;">关键字搜索</span>
        <sam-input :value.sync="searchForm.name" style="width:200px;" placeholder="请输入关键字"></sam-input>
        <el-button type="primary" v-on:click="searchCode">搜索</el-button>
    </div>
    <!--物料列表表格實體-->
    <el-table :data="tableData" stripe border>
        <el-table-column prop="fNumber" label="物料编码"></el-table-column>
        <el-table-column prop="fName" label="物料名称"></el-table-column>
        <el-table-column prop="fQty" label="库存数量"></el-table-column>
        <el-table-column prop="fModel" label="规格型号"></el-table-column>
        <el-table-column prop="unitName" label="单位"></el-table-column>
        <el-table-column prop="fFullName" label="供应商"></el-table-column>
        <el-table-column label="操作">
            <template slot-scope="scope">
                <el-button v-if="scope.row.fQty && noList.indexOf(scope.row.fNumber) < 0" size="mini" v-on:click="addGood(scope.$index, scope.row)">选择</el-button>
                <p v-if="noList.indexOf(scope.row.fNumber) >= 0">已选择</p>
                <span v-if="!scope.row.fQty" style="color:red;">库存为空</span>
            </template>
        </el-table-column>
    </el-table>
    <!--底部翻頁-->
    <div style="text-align:right">
        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[1, 3, 5, 10]"
                       :page-size="pageSize"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="totalRows">
        </el-pagination>
    </div>
    <hr />
    <h3>已选物料</h3>
    <!--采购列表表格實體-->
    <el-table :data="purchaseList" stripe border v-if="showbom">
        <el-table-column prop="fNumber" label="物料编码"></el-table-column>
        <el-table-column prop="fName" label="物料名称"></el-table-column>
        <el-table-column prop="fQty" label="领料数量" width="100">
            <template slot-scope="scope">
                <sam-input :value.sync="scope.row.fQty" type="number" :required="true" :max="scope.row.fQtyInvoice" min="0"></sam-input>
            </template>
        </el-table-column>
        <el-table-column prop="fQtyInvoice" label="库存数量"></el-table-column>
        <el-table-column prop="fModel" label="规格型号"></el-table-column>
        <el-table-column prop="unitName" label="单位"></el-table-column>
        <el-table-column prop="fFullName" label="供应商"></el-table-column>
        <el-table-column label="操作" width="80">
            <template slot-scope="scope">
                <el-button size="mini" type="danger" v-on:click="deleteGood(scope.$index, scope.row)">删除</el-button>
            </template>
        </el-table-column>
    </el-table>

    <el-form v-on:submit.native.prevent :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm"
             id="uploadForm" enctype="multipart/form-data">
        @RenderPage("~/Views/Shared/startForm.cshtml")
        <el-form-item label="项目名称" prop="ProjectId">
            <el-select v-model="ruleForm.ProjectId" placeholder="请选择" style="width:400px;" v-on:change="selectProject" filterable>
                <el-option v-for="item in projectList"
                           :key="item.ProjectId"
                           :label="item.ProjectName"
                           :value="item.ProjectId">
                    <span style="float: left">{{item.ProjectId}}-{{ item.ProjectName }}</span>
                    <span style="float: right; color: #8492a6; font-size: 13px"></span>
                </el-option>
            </el-select>
        </el-form-item>
        @RenderPage("~/Views/Shared/startButton.cshtml")
    </el-form>
</el-main>

<script>
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                searchForm: {
                    business: '',
                    name: '',
                    taskid: ''
                },
                addPeopleNodes: [1],
                showbom:true,
            }
        },
        methods: {
            onSubmit(formName) {
                if (!this.purchaseList.length) {
                    this.elementAlert('提交失败', '没有选择物料')
                    return
                }
                for (let p of this.purchaseList) {
                    if (p.fQty == '' || p.fQty > p.left) {
                        this.elementAlert('提交失败', '已选物料实收数量不正确')
                        return
                    }
                }
                var that = this
                let callBack = function (taskId) {
                    for (let p of that.purchaseList) {
                        p['TaskId'] = taskId
                        p['fAmount'] = parseInt(p.fQty) * p.fPrice
                    }
                    that.PostData('/Pick/Save', that.purchaseList, function () {
                        that.elementAlert('提示信息', '恭喜提交成功')
                        loadPage('/main/Approval')
                    })
                }
                this.approvalSubmit(callBack)
            },
            //搜索物料列表
            searchCode() {
                if (!this.searchForm.name) {
                    this.$message({ type: 'error', message: `请输入关键字` });
                    return
                }
                var url = jinDomarn + 'Pick/ReadPickInfoSingle?keyWord=' + this.searchForm.name
                this.GetData(url, (data) => {
                    if (data.length == 0) this.$message({ type: 'warning', message: `获取数据数为0` })
                    this.data = data
                    this.totalRows = data.length
                    this.getData()
                })
            },
            searchAndAdd() {
                var that = this
                if (!this.searchForm.taskid) return
                var url = 'Pick/ReadDefault' + _formatQueryStr({ ApplyManId: DingData.userid, TaskId: this.searchForm.taskid })
                this.GetData(url, function (data) {
                    console.log(data)
                    if (!data.length) {
                        this.$message({ type: 'error', message: `暂无数据'` });
                        return
                    }
                    for (let d of data) {
                        let ifBreak = false
                        for (let p of that.purchaseList) {
                            if (d.fNumber == p.fNumber) ifBreak = true
                        }
                        if (ifBreak) break
                        d['fQtyInvoice'] = d.fQty
                        d.fQty = 0
                        that.purchaseList.push(d)
                        that.noList.push(d.fNumber)
                    }
                })
            },
            //添加申请物料
            addGood(index, good) {
                for (let p of this.purchaseList) {
                    if (p.fNumber == good.fNumber) return
                }
                let g = _cloneObj(good)
                g.fQtyInvoice = good.fQty
                g.fQty = 0
                this.purchaseList.push(g)
                this.noList.push(g.fNumber)
            },
            //重新发起获取数据后加载
            loadReApprovalData_done() {
                this.showbom = false
                console.warn('hahaha~~~~~~~')
                console.log(this.purchaseList)
                for (let p of this.purchaseList) {
                    let url = jinDomarn + 'Pick/ReadPickInfoSingle?keyWord=' + p.fNumber
                    this.GetData(url, (data) => {
                        for (let p2 of this.purchaseList) {
                            if (p2.fNumber == p.fNumber) {
                                p2.fQtyInvoice = data[0].fQty
                                break
                            }
                        }
                    })
                }
                setTimeout((res) => {
                    this.showbom = true
                },1000)
            },
        },
        created: function () {
            this.initStart()
        }
    })

</script>



