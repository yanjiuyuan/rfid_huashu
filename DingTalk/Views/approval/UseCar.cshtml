@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        {{FlowName}}-{{nodeInfo.NodeName}}
    </div>
    <el-form v-on:submit.native.prevent :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px" class="demo-ruleForm">
        @RenderPage("~/Views/Shared/startForm.cshtml")
    </el-form>
    <el-form v-on:submit.native.prevent :model="tableForm" :rules="rules" ref="tableForm" label-width="130px" class="demo-ruleForm"
             enctype="multipart/form-data">
        <el-form-item label="驾驶员" prop="DrivingMan">
            <el-input v-model="tableForm.DrivingMan" style="width:200px;" :disabled="true"></el-input>
        </el-form-item>
        <el-form-item label="同行人">
            <sam-group :names.sync="tableForm.PeerNumber" :ids.sync="tableForm.PeerNumberId"></sam-group>
        </el-form-item>
        <el-form-item label="车牌号" prop="CarNumber">
            <sam-input :value.sync="tableForm.CarNumber" :required="true"></sam-input>
        </el-form-item>
        <el-form-item label="用车事由" prop="MainContent">
            <sam-input :value.sync="tableForm.MainContent" :required="true"></sam-input>
        </el-form-item>
        <hr />
        <el-form-item label="计划行车路线" prop="PlantTravelWay">
            <sam-input :value.sync="tableForm.PlantTravelWay" :required="true"></sam-input>
        </el-form-item>
        <el-form-item label="用车时间" prop="StartTime" v-if="doneloadTmp">
            <sam-timerange :value1.sync="tableForm.StartTime" :value2.sync="tableForm.EndTime"></sam-timerange>
        </el-form-item>
    </el-form>
    <el-form v-on:submit.native.prevent :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px" class="demo-ruleForm">
        <!--添加审批人-->
        <el-form-item>
            <el-checkbox v-model="ifGoout">本人同意已提交外出申请</el-checkbox>
        </el-form-item>
        <el-form-item>
            <el-checkbox v-model="checked">本人同意<b v-on:click="showMore" style="color:#88B6FF;"><< 私车公用协议书 >></b></el-checkbox>
        </el-form-item>
        <el-collapse v-model="activeNames">
            <el-collapse-item :name="1" :key="1">
                <template slot="title">
                    <span style="font-size:20px;">私车公用协议书</span>
                </template>
                <div>
                    <h2 style="text-align:center;">私车公用协议书</h2>
                    <p>随着研究院（公司）业务的发展和经营规模的扩大，对外经营工作和接待任务的日益增加，交通工具在日常经营管理活动中的作用越来越明显。为提高办事效率、优化资源配置，经甲乙双方共同协商一致，特制定本协议：</p>
                    <p>甲方（公司）: 泉州华中科技大学智能制造研究院（泉州华数机器人有限公司）</p>
                    <p>乙方（个人）: {{DingData.nickName}}</p>

                    <p></p>
                    <h3> 一、车辆现状</h3>
                    <p>
                        车辆名称：           车牌号：         车架号：        车辆购置时间：        车辆状况：
                        登记车主：              （○乙方 / ○非乙方）
                    </p>
                    <p>（若登记车主非乙方，需要提供：</p>
                    <p>1、关系说明文件：如夫妻，提供结婚证复印件一份；如家庭亲属，提供户口本复印件一份）。</p>
                    <p>2、登记车主签字确认的“知晓并同意乙方私车公用行为，并同意与乙方共同承担该协议约定的义务。”的证明文件。）</p>
                    <h3>二、甲方的权利义务</h3>
                    <p>1、甲方享有该车辆的使用权；</p>
                    <p>2、甲方负责承担乙方在使用该车辆办理公务时，参照研究院《车辆管理规定》（2015006号）文件相关规定执行；</p>
                    <p>3、甲方除承担第二条第2款中涉及的相关费用外，不再承担任何由该车辆使用造成的费用及法律责任。</p>
                    <p>4、甲方对于该车辆除使用权外的其他物权纠纷一概不承担责任。</p>
                    <h3>三、乙方的权利和义务 </h3>
                    <p>1、乙方将该车辆用于公司事务使用时，享有第二条第2款中相应费用报销的权利。</p>
                    <p>2、乙方应在 每月10前，经行政部签批确认后，凭正式发票办理费用的报销。</p>
                    <p>3、乙方在使用该车辆时应严格遵守交通规则和相关法律法规，谨慎安全驾驶并及时维护保养；</p>
                    <p>4、乙方在使用该车辆执行公务期间，造成的任何侵权责任（含交通事故），均由乙方承担责任。</p>
                    <h3>四、乙方应在签订本协议的同时，提供身份证复印件、驾照复印件各一份，供甲方留存。</h3>
                    <h3>五、本协议签订前，乙方已完全理解本协议的全部内容，签订本协议是乙方的真实意思表示，乙方同意按本协议约定内容使用车辆。</h3>
                    <h3>六、本协议有效期  壹  年，自    年   月    日至   年   月   日止。（本协议只限于有效期内的私车公用情况）</h3>
                    <h3>七、本协议经双方签字或盖章后生效，若有其他未尽事宜，由双方另行协商解决。</h3>
                    <h3>八、本协议一式两份，甲乙双方各执一份。</h3>
                    <p>日期:{{date}}</p>
                </div>
            </el-collapse-item>
        </el-collapse>
        <br />
        @RenderPage("~/Views/Shared/startButton.cshtml")
    </el-form>
</el-main>

<script>
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                carList: [],
                CarObj: '',
                checked: false,
                ifGoout: false,
                activeNames: [],
                rules: {
                    Title: [{ required: true, message: '车牌号不能为空', trigger: 'blur' }, lengthLimit(1, 15)],
                    DrivingMan: { required: true, message: '申请人不能为空', trigger: 'blur' },
                    PeerNumber: { required: true, message: '同行人不能为空', trigger: 'blur' },
                    CarNumber: [{ required: true, message: '车牌号不能为空', trigger: 'blur' }, lengthLimit(5, 8)],
                    MainContent: [{ required: true, message: '用车事由不能为空', trigger: 'blur' }, lengthLimit(1, 50)],
                    PlantTravelWay: [{ required: true, message: '计划路线不能为空', trigger: 'blur' }, lengthLimit(1, 50)],
                    startAddress: [{ required: true, message: '始发地点不能为空', trigger: 'blur' }, lengthLimit(1, 15)],
                    StartTime: { required: true, message: '用车时间不能为空', trigger: 'blur' },
                    EndTime: { required: true, message: '返回时间不能为空', trigger: 'blur' }
                },
                dayPickerOptions: {
                    shortcuts: [
                        {
                            text: '今天',
                            onClick(picker) {
                                picker.$emit('pick', new Date());
                            }
                        }, {
                            text: '明天',
                            onClick(picker) {
                                const date = new Date();
                                date.setTime(date.getTime() + 3600 * 1000 * 24);
                                picker.$emit('pick', date);
                            }
                        }]
                }
            }
        },
        methods: {
            onSubmit(formName) {
                console.log('submit!');
                if (!this.checked) {
                    this.$message({ type: 'error', message: `必须先同意用车协议才可申请` });
                    return
                }
                if (!this.ifGoout) {
                    this.$message({ type: 'error', message: `必须先提交外出申请才可申请` });
                    return
                }
                if (this.nodeList[1].AddPeople.length > 0 && this.nodeList[1].AddPeople[0].emplId == "0907095238746571") {
                    this.$message({ type: 'error', message: `用车无需季老师审批,如是部长级请选本人` });
                    return
                }
                var that = this
                
                let url = '/CarTable/TableSave'
                var param = _cloneObj(this.tableForm)
                param['IsPublic'] = false
                let callBack = function (taskId) {
                    console.log(taskId)
                    param.TaskId = taskId
                    console.log(JSON.stringify(param))
                    that._postData(url, function (data) {
                        that.$alert('恭喜提交成功', '提示信息', {
                            confirmButtonText: '确定',
                            callback: action => {
                                goHome()
                            }
                        })
                    }, param)
                }
                this.$refs['tableForm'].validate((valid) => {
                    if (valid) that.approvalSubmit(callBack)
                    else {
                        that.$alert('表单信息不全或有误', '提示信息', {
                            confirmButtonText: '确定'
                        })
                    }
                })
            },
            showMore() {
                console.log('hello?')
                this.activeNames = [1]
            },
        },
        
        created: function () {
            this.initStart((res) => {
                this.tableForm['DrivingMan'] = DingData.nickName
            })
        }
    })
    

</script>



