@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <!--标题-->
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        {{FlowName}}-{{nodeInfo.NodeName}}
    </div>
    <!--物料搜索-->
    <div>
        <div>
            <span style="padding:3px;">搜索类型</span>
            <el-radio-group v-model="codeType" v-on:change="changeCodeType">
                <el-radio label="1">采购单编号搜索</el-radio>
                <el-radio label="2">关键字搜索</el-radio>
            </el-radio-group>
            <span style="color:red;"> 切换搜索类型会清空已选物料！！！</span>
        </div>
        <template v-if="codeType == 1">
            <span style="color:red">*</span>
            <span style="padding:3px;">采购单编号搜索</span>
            <sam-input :value.sync="searchForm.no" style="width:200px;" :required="true" placeholder="请输入采购单编号"></sam-input>
            <el-button type="primary" v-on:click="searchNo">搜索</el-button>
        </template>
        <template v-if="codeType == 2">
            <span style="color:red">*</span>
            <span style="padding:3px;">关键字搜索</span>
            <sam-input :value.sync="searchForm.name" style="width:200px;" :required="true" placeholder="请输入关键字"></sam-input>
            <el-button type="primary" v-on:click="searchCode">搜索</el-button>
        </template>
    </div>
    <!--物料列表表格實體-->
    <el-table :data="tableData" stripe border v-if="codeType == 2">
        <el-table-column prop="fNumber" label="物料编码"></el-table-column>
        <el-table-column prop="fName" label="物料名称"></el-table-column>
        <el-table-column prop="fQty" label="实收数量"></el-table-column>
        <el-table-column prop="fModel" label="规格型号"></el-table-column>
        <el-table-column prop="unitName" label="单位"></el-table-column>
        <el-table-column prop="fFullName" label="供应商"></el-table-column>
        <el-table-column label="操作">
            <template slot-scope="scope">
                <p v-if="noList.indexOf(scope.row.fNumber) >= 0">已选择</p>
                <el-button v-else size="mini" v-on:click="addGood(scope.$index, scope.row)">选择</el-button>
            </template>
        </el-table-column>
    </el-table>
    <!--底部翻頁-->
    <div style="text-align:right" v-if="codeType == 2">
        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[1, 3, 5, 10]"
                       :page-size="pageSize"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="totalRows">
        </el-pagination>
    </div>
    <hr />
    <h3>已选物料</h3>
    <!--采购列表表格實體-->
    <el-table :data="purchaseList" stripe border>
        <el-table-column prop="fNumber" label="物料编码"></el-table-column>
        <el-table-column prop="fName" label="物料名称"></el-table-column>
        <el-table-column prop="fQty" label="实收数量" width="100">
            <template slot-scope="scope">
                <sam-input :value.sync="scope.row.fQty" type="number" min="0" :max="scope.row.have" :required="true"></sam-input>
            </template>
            @*<template slot-scope="scope">
                <el-input v-model="scope.row.fQty" prop="Count" :class="{ redborder:scope.row.fQty =='' || scope.row.fQty > scope.row.have}"></el-input>
            </template>*@
        </el-table-column>
        <el-table-column prop="fModel" label="规格型号"></el-table-column>
        <el-table-column prop="unitName" label="单位"></el-table-column>
        <el-table-column prop="fFullName" label="供应商"></el-table-column>
        <el-table-column label="操作" width="80">
            <template slot-scope="scope">
                <el-button size="mini" type="danger" v-on:click="deleteGood(scope.$index, scope.row)">删除</el-button>
            </template>
        </el-table-column>
    </el-table>

    <el-form v-on:submit.native.prevent :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm"
             id="uploadForm" enctype="multipart/form-data">
        @RenderPage("~/Views/Shared/startForm.cshtml")
        <el-form-item label="项目名称" prop="ProjectId">
            <el-select v-model="ruleForm.ProjectId" placeholder="请选择" style="width:400px;" v-on:change="selectProject" filterable>
                <el-option v-for="item in projectList"
                           :key="item.ProjectId"
                           :label="item.ProjectName"
                           :value="item.ProjectId">
                    <span style="float: left">{{item.ProjectId}}-{{ item.ProjectName }}</span>
                    <span style="float: right; color: #8492a6; font-size: 13px"></span>
                </el-option>
            </el-select>@*备品备件采购项目 - 猛龙总冠军*@
            <el-button v-if="ruleForm.ProjectName == '备品备件采购项目'" class="button-new-tag" size="small" v-on:click="chooseMan()">+ 选人</el-button>
        </el-form-item>

        @RenderPage("~/Views/Shared/startButton.cshtml")
    </el-form>
</el-main>

<script>
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                codeType: '1',
                searchForm: {
                    business: '', 
                    no:'',
                    name: '',
                },
                addPeopleNodes: [2],
            }
        },
        methods: {
            onSubmit(formName) {
                //console.log(this.nodeList) 
                //return
                if (!this.purchaseList.length) {
                    this.elementAlert('提交失败', '没有选择物料')
                    return
                }
                var arr = []
                for (let p of this.purchaseList) {
                    if (p.fQty == '' || p.fQty > p.have) {
                        this.elementAlert('提交失败', '已选物料实收数量不正确')
                        return
                    }
                    arr.push(p.fFullName)
                }
                var that = this
                let callBack = function (taskId) {
                    for (let p of that.purchaseList) {
                        p['TaskId'] = taskId
                    }
                    that.PostData('/Godown/Save', that.purchaseList, function() {
                        that.elementAlert('提示信息', '恭喜提交成功')
                        loadPage('/main/Approval')
                    })
                }
                this.approvalSubmit(callBack)
            },
            //切换搜索类型
            changeCodeType(e) {
                this.purchaseList = []
            },
            //搜索物料列表
            searchCode() {
                var that = this
                if (!this.searchForm.name) {
                    this.$message({ type: 'error', message: `请输入关键字` });
                    return
                }
                var url = jinDomarn + 'Godown/ReadGodownInfoSingle?keyWord=' + that.searchForm.name
                this.GetData(url, function (data) {
                    if (data.length == 0) this.$message({ type: 'warning', message: `获取数据数为0` })
                    that.data = data
                    that.totalRows = data.length
                    that.getData()
                })
            },
            searchNo() {
                var that = this
                if (!this.searchForm.no) {
                    this.$message({ type: 'error', message: `请输采购单编号` });
                    return
                }
                var url = jinDomarn + 'Godown/GetGodownInfoByFBillNo?FBillNo=' + that.searchForm.no
                this.GetData(url, function (data) {
                    if (data.length == 0) this.$message({ type: 'warning', message: `获取数据数为0` })
                    for (let d of data) {
                        that.purchaseList.push(d)
                    }
                })
            },
            //选人特殊处理
            chooseMan() {
                DingTalkPC.biz.contact.choose({
                    users: [],
                    multiple: false,
                    corpId: DingData.CorpId,
                    max: 10,
                    onSuccess: (data) => {
                        console.log(data)
                        let i = 2
                        this.nodeList[i].AddPeople = [{
                            name: data[0].name,
                            emplId: data[0].emplId
                        }]
                        $("." + i).remove()
                        $("#" + i).after('<span class="el-tag ' + i + '" style="width: 60px; text-align: center; ">' + data[0].name.substring(0, 3) + '</span >')
                    },
                    onFail: function (err) { }
                });
            },
            //添加申请物料
            addGood(index, g) {
                let good = _cloneObj(g)
                for (let p of this.purchaseList) {
                    if (p.fNumber == good.fNumber) return
                }
                good['have'] = good.fQty
                this.purchaseList.push(good)
                this.noList.push(good.fNumber)
            },
        },
        created: function () {
            this.initStart()
        }
    })

</script>



