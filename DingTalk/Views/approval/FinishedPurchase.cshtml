@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <!--标题-->
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        {{FlowName}}-{{nodeInfo.NodeName}}
    </div>
    <!--物料搜索-->
    <div>
        <span style="color:red">*</span><span style="padding:3px;">关键字</span>
        <sam-input :value.sync="searchForm.name" :required="true" style="width:200px;" placeholder="请输入搜索关键字"></sam-input>
        <el-button type="primary" v-on:click="searchCode">搜索</el-button>
    </div>
    <!--物料列表表格實體-->
    <el-table :data="tableData" stripe border>
        <el-table-column prop="FNumber" label="物料编码"></el-table-column>
        <el-table-column prop="FName" label="物料名称"></el-table-column>
        <el-table-column prop="FModel" label="规格型号"></el-table-column>
        @*<el-table-column prop="FOrderPrice" label="单价"></el-table-column>*@
        <el-table-column prop="FNote" label="预计单价"></el-table-column>
        <el-table-column label="操作">
            <template slot-scope="scope">
                <p v-if="noList.indexOf(scope.row.FNumber) >= 0">已选择</p>
                <el-button size="mini" v-else
                           v-on:click="addGood(scope.$index, scope.row)">选择</el-button>
            </template>
        </el-table-column>
    </el-table>
    <!--底部翻頁-->
    <div style="text-align:right">
        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[1, 3, 5, 10]"
                       :page-size="pageSize"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="totalRows">
        </el-pagination>
    </div>
    <hr />
    <h3>已选采购物品</h3>
    <!--采购列表表格實體-->
    <el-table :data="purchaseList" stripe border>
        <el-table-column type="index" label="序号" width="50"></el-table-column>
        <el-table-column prop="CodeNo" label="物料编码"></el-table-column>
        <el-table-column prop="Name" label="物料名称"></el-table-column>
        <el-table-column prop="Standard" label="规格型号"></el-table-column>
        <el-table-column prop="Unit" label="单位">
            <template slot-scope="scope">
                <sam-input :value.sync="scope.row.Unit" :required="true"></sam-input>
            </template>
        </el-table-column>
        <el-table-column prop="Price" label="预计单价" width="100">
            <template slot-scope="scope">
                <sam-input :value.sync="scope.row.Price"></sam-input>
            </template>
        </el-table-column>
        <el-table-column prop="Count" label="数量" width="100">
            <template slot-scope="scope">
                <sam-input :value.sync="scope.row.Count" type="number" min="0" :required="true"></sam-input>
            </template>
        </el-table-column>
        <el-table-column prop="Purpose" label="用途">
            <template slot-scope="scope">
                <sam-input :value.sync="scope.row.Purpose"></sam-input>
            </template>
        </el-table-column>
        <el-table-column prop="UrgentDate" label="需用日期" width="160">
            <template slot-scope="scope">
                <el-date-picker style="width:100%;" v-model="scope.row.UrgentDate" :class="{ redborder:scope.row.UrgentDate ==''}" :ediTable="false"
                                type="date" prefix-icon="el-icon-minus" clear-icon="el-icon-minus" value-format="yyyy-MM-dd">
                </el-date-picker>
            </template>

        </el-table-column>
        <el-table-column label="送货地点" width="160">
            <template slot-scope="scope">
                <el-select v-model="scope.row.SendPosition">
                    <el-option v-for="item in SendPosition"
                               :key="item.name"
                               :label="item.name"
                               :value="item.name">
                    </el-option>
                </el-select>
            </template>
        </el-table-column>

        <el-table-column prop="Mark" label="备注">
            <template slot-scope="scope">
                <sam-input :value.sync="scope.row.Mark"></sam-input>
            </template>
        </el-table-column>
        <el-table-column label="操作" width="80">
            <template slot-scope="scope">
                @*<el-button size="mini" v-on:click="showEditGood(scope.$index, scope.row)">编辑</el-button>*@
                <el-button size="mini" type="danger" v-on:click="deleteGood(scope.$index, scope.row)">删除</el-button>
            </template>
        </el-table-column>
    </el-table>

    <el-form v-on:submit.native.prevent :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm"
             id="uploadForm" enctype="multipart/form-data">
        @RenderPage("~/Views/Shared/startForm.cshtml")
        <el-form-item label="合同名">
            <el-select v-model="ruleForm.ProjectId" placeholder="请选择" style="width:400px;" v-on:change="selectProject">
                <el-option v-for="item in projectList"
                           :key="item.ContractNo"
                           :label="item.ContractName + ' -编号: ' + item.ContractNo"
                           :value="item.ContractNo">
                    <span style="float: left">{{ item.ContractName }}  -编号: {{item.ContractNo}}</span>
                    <span style="float: right; color: #8492a6; font-size: 13px"></span>
                </el-option>
            </el-select>
        </el-form-item>
        @RenderPage("~/Views/Shared/startButton.cshtml")
    </el-form>
</el-main>

<script>
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                value: '',
                good: {
                    Price: '',
                    Unit: '',
                    Count: ''
                },
                searchForm: {
                    name: '',
                },
                SendPosition: [{ name: "华数" }, { name: "基地" }]
            }
        },
        methods: {
            onSubmit(formName) {
                if (!this.purchaseList.length) {
                    this.elementAlert('提交失败', '没有选择采购物品')
                    return
                }
                if (!this.ruleForm.ProjectId) {
                    this.elementAlert('提交失败', '没有选择合同')
                    return
                }
                for (let p of this.purchaseList) {
                    if (p.Unit == '' || p.Count == '') {
                        this.elementAlert('提交失败', '已选物品信息没填全')
                        return
                    }
                }

                var that = this
                let url = '/PurchaseNew/SavePurchaseTable'
                let callBack = function (taskId) {
                    console.log(taskId)
                    var param = []
                    for (let p of that.purchaseList) {
                        p.TaskId = taskId
                        param.push(p)
                    }
                    console.log(JSON.stringify(param))

                    that.PostData(url, param, (data)=> {
                        that.$alert('恭喜提交成功', '提示信息', {
                            confirmButtonText: '确定',
                            callback: action => {
                                goHome()
                            }
                        });
                    })
                }
                that.approvalSubmit(callBack)
            },
            //下拉框选择合同
            selectProject(id) {
                console.log(id)
                for (var proj of this.projectList) {
                    if (proj.ContractNo == id) {
                        this.ruleForm.ProjectName = proj.ContractType
                    }
                }

            },
            //搜索物料列表
            searchCode(formName) {
                var that = this
                if (!this.searchForm.name) return
                //this.$refs[formName].validate((valid) => {
                //    if (valid) {
                var url = '/Purchase/GetICItem?Key=' + that.searchForm.name
                $.ajax({
                    url: url,
                    success: function (data) {
                        console.log(url)
                        console.log("搜索物料列表ok")
                        data = JSON.parse(data)
                        console.log(data)
                        that.data = data
                        that.totalRows = data.length
                        that.getData()
                    }
                })
            },
            //添加申请物料
            addGood(index, good) {
                for (let p of this.purchaseList) {
                    if (p.CodeNo == good.FNumber) return
                }
                //if (!checkRate(good.FNote)) good.FNote = 0
                console.log(good.FNote)
                this.purchaseList.push({
                    CodeNo: good.FNumber,
                    Name: good.FName,
                    Standard: good.FModel,
                    Unit: '',
                    Price: good.FNote,// == '0' ? '' : good.FNote,
                    Count: '',
                    Purpose: '',
                    UrgentDate: '',
                    Mark: '',
                    SendPosition: this.SendPosition[0].name,
                    purchaseType: '成品采购'
                })
                this.noList.push(good.FNumber)
            },
            //获取合同数据
            getProjects() {
                var that = this
                var param = {
                    pageIndex: this.currentPage,
                    pageSize: 1000
                }
                this._getData("/ContractManager/Quary", function (result) {
                    that.projectList = result.data
                }, param)
            },
        },
        created: function () {
            this.initStart()
        }
    })
    document.onkeydown = function (e) { // 回车提交表单
        // 兼容FF和IE和Opera
        var theEvent = window.event || e;
        var code = theEvent.keyCode || theEvent.which || theEvent.charCode;
        if (code == 13) {
            demo.searchCode()
        }
    }
</script>



