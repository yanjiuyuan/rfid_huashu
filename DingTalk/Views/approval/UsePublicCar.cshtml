@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        {{FlowName}}-{{nodeInfo.NodeName}}
    </div>
    <el-form v-on:submit.native.prevent :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px" class="demo-ruleForm">
        @RenderPage("~/Views/Shared/startForm.cshtml")
    </el-form>
    <el-form v-on:submit.native.prevent :model="tableForm" :rules="rules" ref="tableForm" label-width="130px" class="demo-ruleForm"
             enctype="multipart/form-data">
        <el-form-item label="驾驶员" prop="DrivingMan">
            <el-input v-model="tableForm.DrivingMan" style="width:200px;" :disabled="true"></el-input>
            @*<el-button class="button-new-tag" size="small" v-on:click="addDrivingMan()">+ 选人</el-button>*@
        </el-form-item>
        <el-form-item label="同行人">
            <sam-group :names.sync="tableForm.PeerNumber" :ids.sync="tableForm.PeerNumberId"></sam-group>
        </el-form-item>
        <el-form-item label="用车事由" prop="MainContent">
            <sam-input :value.sync="tableForm.MainContent" :required="true"></sam-input>
        </el-form-item>
        <el-form-item label="计划行车路线" prop="PlantTravelWay">
            <sam-input :value.sync="tableForm.PlantTravelWay" :required="true"></sam-input>
        </el-form-item>

        <el-form-item label="用车时间" prop="StartTime" v-if="doneloadTmp">
            <sam-timerange :value1.sync="tableForm.StartTime" :value2.sync="tableForm.EndTime"></sam-timerange>
        </el-form-item>
    </el-form>
    <el-form v-on:submit.native.prevent :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px" class="demo-ruleForm">
        <!--添加审批人-->
        <el-form-item>
            <el-checkbox v-model="ifGoout">本人同意已提交外出申请</el-checkbox>
        </el-form-item>
        <el-form-item>
            <el-checkbox v-model="checked">本人同意<b v-on:click="showMore" style="color:#88B6FF;"><< 研究院车辆安全使用协议 >></b></el-checkbox>
        </el-form-item>
        <el-collapse v-model="activeNames">
            <el-collapse-item :name="1" :key="1">
                <template slot="title">
                    <span style="font-size:20px;">车辆安全使用协议</span>
                </template>
                <div>
                    <h2 style="text-align:center;">车辆安全使用协议</h2>
                    <p>甲方: 泉州华中科技大学智能制造研究院（泉州华数机器人有限公司）</p>
                    <p>乙方: {{DingData.nickName}}</p>
                    <p>为加强公务用车使用管理，严格控制车辆费用，明确车辆使用责任，确保行车安全，方便工作的开展，提高工作效率，经甲、乙双方协商，特订立本协议书</p>
                    <p></p>
                    <h3>一、本协议适用范围</h3>
                    <p>研究院公务用车</p>
                    <h3>二、车辆权属</h3>
                    <p>甲方将______汽车一辆，车牌号码：_______提供给乙方在工作期间(因公事外出)使用。</p>
                    <h3>三、乙方的权利和义务 </h3>
                    <p>1、乙方必须持证驾驶车辆，严格遵守《中华人民共和国道路交通安全法》，不酒后驾车、不疲劳驾车、不危险驾车（如超速、追尾、争道、赛车等），因违反交通法律法规产生的责任及罚款，概由乙方承担。</p>
                    <p>2、乙方不得搭载与本业务无关人员，走无关路线，装载违禁物品。</p>
                    <p>3、乙方对甲方统一调用不得推诿扯皮，敷衍塞责。</p>
                    <p>4、乙方不得将车辆交与未经甲方授权或未签订《车辆使用协议》的公司员工或其他人员驾驶。否则，发生问题乙方承担全部责任。</p>
                    <p>5、乙方有义务对车辆进行必要的保养和维护。</p>
                    <h3>四、管理规定</h3>
                    <h3>1.用车申请及登记</h3>
                    <p>1.1用车申请：用车人员须使用“钉钉”系统后台申请填写《公车申请单》，经部门负责人审批后，由行政综合部统一安排调度。</p>
                    <p>1.2行政综合部车辆负责人调度车辆的同时，应做好车辆使用情况登记工作。</p>
                    <p>1.3周末、节假日用车，必须经本部部长、行政综合部领导批准，方能使用。</p>
                    <h3>2.车辆的使用与安排</h3>
                    <p>2.1 研究院及华数用车由行政综合部统一进行调配。</p>
                    <p>2.2驾驶员应提前做好用车计划，避免临时用车。凡未按规定提前半天申请使用车辆（紧急情况除外）的部门，行政部对其临时用车要求，不提供保障。</p>
                    <p>2.3因次日出车需要或出车晚归（晚上10点以后），报院领导或行政综合部批准后，驾驶人可将车辆停放在住所附近安全地点，其他时间车辆必须停放在研究院或产业基地楼下。</p>
                    <p>2.4未经行政部审批，不得擅自拿取或互传公车钥匙，无论是否公务用车，其燃油费、路桥费用均自行承担。</p>
                    <p>2.5到研究院或产业基地附近，计划作业一整天的员工，根据情况应尽量把公车停放在基地，以提高车辆的使用效率。</p>
                    <p>2.6从研究院或产业基地至目的地有公交到达，且无负重的，原则上不安排公务车辆。</p>
                    <p>2.7驾驶员每次出车前、后需将里程表拍照上传至钉钉车辆审批后台。行政部车辆负责人负责统计好各部门车辆使用费用。</p>
                    <p>2.8 临时用车，未来得及填报钉钉《公车申请单》的情况下，驾驶员出车前、后需将里程表拍照留底，返回后应立即补报《公车申请单》。</p>
                    <p>2.9 因私事借用公车的，需报行政部领导批准，同时填写《公车申请单》。使用期间的燃油费、路桥费用均自行承担。</p>
                    <h3>3.车辆的日常维护及保养</h3>
                    <p>3.1 车辆日常维护</p>
                    <p>3.1.1行政部车辆负责人应随时检查方向盘、制动、灯光、机油、冷却水等部件，发现问题及时排除，严禁带故障出车。</p>
                    <p>3.1.2驾驶员出车前应对车辆进行例行检查，行车途中发现异常应立即停车检查并及时处理；车辆返回应按要求停好车辆、锁好门窗。对于未锁门窗者，发现一次处于当事用车司机100元的罚款。</p>
                    <p>3.1.3员工应爱惜公务车卫生，不得将饮料瓶、塑料袋等遗弃在车子内，发现一次处以当事用车司机50元的罚款。</p>
                    <p>3.1.4 由行政部负责对公务用车进行定期保养和年检。</p>
                    <h3>4.安全管理</h3>
                    <p>4.1交通违章、肇事罚则</p>
                    <p>4.1.1驾驶员应严格遵守交通法规，因公出车，车辆交通违章罚款由当事司机全额自负。</p>
                    <p>4.1.2因公驾驶公务车遇交通事故发生车辆刮、擦、碰及伤人等交通事故所产生的费用和责任，若在未违反交通法律法规情况下，除保险公司承担赔偿费用以外，其事故免赔部分由公司承担；若事故责任人是乙方驾驶员，除保险公司承担赔偿费以外，其事故免赔部分由驾驶员分担。</p>
                    <p>4.1.3公务车在非公务途中发生的车辆刮、擦、碰及伤人等交通事故所产生的费用和责任，除保险公司承担赔偿费用以外，其事故免赔损失部分由乙方承担。</p>
                    <h3>五、未尽事宜，双方平等协商后可另加附款。</h3>
                    <h3>六、协议留存</h3>
                    <p>此协议一式三份，甲方留存一份，乙方留存一份，行政综合部办公室留存一份，协议双方签字盖章后生效。</p>
                    <p>日期:{{date}}</p>
                </div>
            </el-collapse-item>
        </el-collapse>
        <br />
        @RenderPage("~/Views/Shared/startButton.cshtml")
    </el-form>
</el-main>

<script>
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                carList: [],
                useTimeList: [],
                checked: false,
                ifGoout: false,
                activeNames: [],
                rules: {
                    DrivingMan: commonInput,
                    PeerNumber: commonInput,
                    MainContent: commonInput,
                    PlantTravelWay: commonInput,
                    startAddress: commonInput,
                    StartTime: commonInput,
                    EndTime: commonInput
                },
            }
        },
        methods: {
            onSubmit(formName) {
                console.log('submit!');
                if (!this.checked) {
                    this.$message({ type: 'error', message: `必须先同意用车协议才可申请` });
                    return
                }
                if (!this.ifGoout) {
                    this.$message({ type: 'error', message: `必须先提交外出申请才可申请` });
                    return
                }
                if (this.nodeList[1].AddPeople.length>0 && this.nodeList[1].AddPeople[0].emplId == "0907095238746571") {
                    this.$alert('用车无需季老师审批,如是部长级请选本人', '提示信息')
                    return
                }
                var that = this
                let url = '/CarTable/TableSave'
                var param = _cloneObj(this.tableForm)
                param['IsPublicCar'] = true
                let callBack = function (taskId) {
                    console.log(taskId)
                    param.TaskId = taskId
                    console.log(JSON.stringify(param))
                    that._postData(url, function (data) {
                        that.$alert('恭喜提交成功', '提示信息', {
                            confirmButtonText: '确定',
                            callback: action => {
                                goHome()
                            }
                        })
                    },param)
                }
                console.log(param)
                this.$refs['tableForm'].validate((valid) => {
                    if (valid) that.approvalSubmit(callBack)
                    else {
                        that.$alert('表单信息不全或有误', '提示信息', {
                            confirmButtonText: '确定'
                        })
                    }
                })
            },
            showMore() {
                console.log('hello?')
                this.activeNames = [1]
            },
            //添加用车人
            addDrivingMan() {
                var that = this
                DingTalkPC.biz.contact.choose({
                    users: [],
                    multiple: false,
                    corpId: DingData.CorpId,
                    max: 10,
                    onSuccess: function (data) {
                        console.log(data)
                        that.tableForm.DrivingMan = data[0].name
                    },
                    onFail: function (err) { }
                });
            },
        },
        created: function () {
            this.initStart((res) => {
                this.tableForm['DrivingMan'] = DingData.nickName
            })
        },
    })

</script>



